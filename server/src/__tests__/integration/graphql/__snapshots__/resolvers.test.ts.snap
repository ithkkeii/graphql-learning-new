// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Queries Challenge should return all challenges 1`] = `
Object {
  "data": Object {
    "getChallenges": Array [
      Object {
        "challengeSeed": "'use strict'",
        "content": Object {
          "constraints": "abc",
          "inputFormat": "abc",
          "outputFormat": "abc",
          "problem": "abc",
        },
        "contest": Object {
          "challenges": Array [
            Object {
              "id": "5ecbf94b16adcf33089b9194",
            },
            Object {
              "id": "5ecbf95916adcf33089b9196",
            },
            Object {
              "id": "5ecbf96716adcf33089b9198",
            },
          ],
          "id": "5ecbf68781de4e2d392e22c3",
          "name": "Sort Algorithm",
        },
        "id": "5ecbf94b16adcf33089b9194",
        "level": "easy",
        "passedUser": Array [],
        "points": 100,
        "testCases": Array [
          Object {
            "testString": "assert",
            "text": "Must be [1,2,3]",
          },
        ],
        "testInputs": Array [
          "[3,1,2]",
        ],
        "title": "Bubble Sort",
      },
      Object {
        "challengeSeed": "'use strict'",
        "content": Object {
          "constraints": "abc",
          "inputFormat": "abc",
          "outputFormat": "abc",
          "problem": "abc",
        },
        "contest": Object {
          "challenges": Array [
            Object {
              "id": "5ecbf94b16adcf33089b9194",
            },
            Object {
              "id": "5ecbf95916adcf33089b9196",
            },
            Object {
              "id": "5ecbf96716adcf33089b9198",
            },
          ],
          "id": "5ecbf68781de4e2d392e22c3",
          "name": "Sort Algorithm",
        },
        "id": "5ecbf95916adcf33089b9196",
        "level": "medium",
        "passedUser": Array [],
        "points": 100,
        "testCases": Array [
          Object {
            "testString": "assert",
            "text": "Must be [1,2,3]",
          },
        ],
        "testInputs": Array [
          "[3,1,2]",
        ],
        "title": "Quick Sort",
      },
      Object {
        "challengeSeed": "'use strict'",
        "content": Object {
          "constraints": "abc",
          "inputFormat": "abc",
          "outputFormat": "abc",
          "problem": "abc",
        },
        "contest": Object {
          "challenges": Array [
            Object {
              "id": "5ecbf94b16adcf33089b9194",
            },
            Object {
              "id": "5ecbf95916adcf33089b9196",
            },
            Object {
              "id": "5ecbf96716adcf33089b9198",
            },
          ],
          "id": "5ecbf68781de4e2d392e22c3",
          "name": "Sort Algorithm",
        },
        "id": "5ecbf96716adcf33089b9198",
        "level": "medium",
        "passedUser": Array [],
        "points": 100,
        "testCases": Array [
          Object {
            "testString": "assert",
            "text": "Must be [1,2,3]",
          },
        ],
        "testInputs": Array [
          "[3,1,2]",
        ],
        "title": "Merge Sort",
      },
    ],
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`Queries Challenge should return single challenge with provided ID 1`] = `
Object {
  "data": Object {
    "getChallenge": Object {
      "challengeSeed": "'use strict'",
      "content": Object {
        "constraints": "abc",
        "inputFormat": "abc",
        "outputFormat": "abc",
        "problem": "abc",
      },
      "contest": Object {
        "challenges": Array [
          Object {
            "id": "5ecbf94b16adcf33089b9194",
          },
          Object {
            "id": "5ecbf95916adcf33089b9196",
          },
          Object {
            "id": "5ecbf96716adcf33089b9198",
          },
        ],
        "id": "5ecbf68781de4e2d392e22c3",
        "name": "Sort Algorithm",
      },
      "id": "5ecbf96716adcf33089b9198",
      "level": "medium",
      "passedUser": Array [],
      "points": 100,
      "testCases": Array [
        Object {
          "testString": "assert",
          "text": "Must be [1,2,3]",
        },
      ],
      "testInputs": Array [
        "[3,1,2]",
      ],
      "title": "Merge Sort",
    },
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`Queries Contest should return all contests 1`] = `
Object {
  "data": Object {
    "getContests": Array [
      Object {
        "challenges": Array [],
        "id": "5ecbf66d81de4e2d392e22c2",
        "name": "Binary",
      },
      Object {
        "challenges": Array [
          Object {
            "challengeSeed": "'use strict'",
            "content": Object {
              "constraints": "abc",
              "inputFormat": "abc",
              "outputFormat": "abc",
              "problem": "abc",
            },
            "contest": Object {
              "challenges": Array [
                Object {
                  "id": "5ecbf94b16adcf33089b9194",
                },
                Object {
                  "id": "5ecbf95916adcf33089b9196",
                },
                Object {
                  "id": "5ecbf96716adcf33089b9198",
                },
              ],
              "id": "5ecbf68781de4e2d392e22c3",
              "name": "Sort Algorithm",
            },
            "id": "5ecbf94b16adcf33089b9194",
            "level": "easy",
            "passedUser": Array [],
            "points": 100,
            "testCases": Array [
              Object {
                "testString": "assert",
                "text": "Must be [1,2,3]",
              },
            ],
            "testInputs": Array [
              "[3,1,2]",
            ],
            "title": "Bubble Sort",
          },
          Object {
            "challengeSeed": "'use strict'",
            "content": Object {
              "constraints": "abc",
              "inputFormat": "abc",
              "outputFormat": "abc",
              "problem": "abc",
            },
            "contest": Object {
              "challenges": Array [
                Object {
                  "id": "5ecbf94b16adcf33089b9194",
                },
                Object {
                  "id": "5ecbf95916adcf33089b9196",
                },
                Object {
                  "id": "5ecbf96716adcf33089b9198",
                },
              ],
              "id": "5ecbf68781de4e2d392e22c3",
              "name": "Sort Algorithm",
            },
            "id": "5ecbf95916adcf33089b9196",
            "level": "medium",
            "passedUser": Array [],
            "points": 100,
            "testCases": Array [
              Object {
                "testString": "assert",
                "text": "Must be [1,2,3]",
              },
            ],
            "testInputs": Array [
              "[3,1,2]",
            ],
            "title": "Quick Sort",
          },
          Object {
            "challengeSeed": "'use strict'",
            "content": Object {
              "constraints": "abc",
              "inputFormat": "abc",
              "outputFormat": "abc",
              "problem": "abc",
            },
            "contest": Object {
              "challenges": Array [
                Object {
                  "id": "5ecbf94b16adcf33089b9194",
                },
                Object {
                  "id": "5ecbf95916adcf33089b9196",
                },
                Object {
                  "id": "5ecbf96716adcf33089b9198",
                },
              ],
              "id": "5ecbf68781de4e2d392e22c3",
              "name": "Sort Algorithm",
            },
            "id": "5ecbf96716adcf33089b9198",
            "level": "medium",
            "passedUser": Array [],
            "points": 100,
            "testCases": Array [
              Object {
                "testString": "assert",
                "text": "Must be [1,2,3]",
              },
            ],
            "testInputs": Array [
              "[3,1,2]",
            ],
            "title": "Merge Sort",
          },
        ],
        "id": "5ecbf68781de4e2d392e22c3",
        "name": "Sort Algorithm",
      },
      Object {
        "challenges": Array [],
        "id": "5ecbf69681de4e2d392e22c4",
        "name": "Serlock Homes",
      },
      Object {
        "challenges": Array [],
        "id": "5ecbf6a181de4e2d392e22c5",
        "name": "Tree Algorithm",
      },
    ],
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`Queries Contest should return single contest with provided ID 1`] = `
Object {
  "data": Object {
    "getContest": Object {
      "challenges": Array [
        Object {
          "challengeSeed": "'use strict'",
          "content": Object {
            "constraints": "abc",
            "inputFormat": "abc",
            "outputFormat": "abc",
            "problem": "abc",
          },
          "contest": Object {
            "challenges": Array [
              Object {
                "id": "5ecbf94b16adcf33089b9194",
              },
              Object {
                "id": "5ecbf95916adcf33089b9196",
              },
              Object {
                "id": "5ecbf96716adcf33089b9198",
              },
            ],
            "id": "5ecbf68781de4e2d392e22c3",
            "name": "Sort Algorithm",
          },
          "id": "5ecbf94b16adcf33089b9194",
          "level": "easy",
          "passedUser": Array [],
          "points": 100,
          "testCases": Array [
            Object {
              "testString": "assert",
              "text": "Must be [1,2,3]",
            },
          ],
          "testInputs": Array [
            "[3,1,2]",
          ],
          "title": "Bubble Sort",
        },
        Object {
          "challengeSeed": "'use strict'",
          "content": Object {
            "constraints": "abc",
            "inputFormat": "abc",
            "outputFormat": "abc",
            "problem": "abc",
          },
          "contest": Object {
            "challenges": Array [
              Object {
                "id": "5ecbf94b16adcf33089b9194",
              },
              Object {
                "id": "5ecbf95916adcf33089b9196",
              },
              Object {
                "id": "5ecbf96716adcf33089b9198",
              },
            ],
            "id": "5ecbf68781de4e2d392e22c3",
            "name": "Sort Algorithm",
          },
          "id": "5ecbf95916adcf33089b9196",
          "level": "medium",
          "passedUser": Array [],
          "points": 100,
          "testCases": Array [
            Object {
              "testString": "assert",
              "text": "Must be [1,2,3]",
            },
          ],
          "testInputs": Array [
            "[3,1,2]",
          ],
          "title": "Quick Sort",
        },
        Object {
          "challengeSeed": "'use strict'",
          "content": Object {
            "constraints": "abc",
            "inputFormat": "abc",
            "outputFormat": "abc",
            "problem": "abc",
          },
          "contest": Object {
            "challenges": Array [
              Object {
                "id": "5ecbf94b16adcf33089b9194",
              },
              Object {
                "id": "5ecbf95916adcf33089b9196",
              },
              Object {
                "id": "5ecbf96716adcf33089b9198",
              },
            ],
            "id": "5ecbf68781de4e2d392e22c3",
            "name": "Sort Algorithm",
          },
          "id": "5ecbf96716adcf33089b9198",
          "level": "medium",
          "passedUser": Array [],
          "points": 100,
          "testCases": Array [
            Object {
              "testString": "assert",
              "text": "Must be [1,2,3]",
            },
          ],
          "testInputs": Array [
            "[3,1,2]",
          ],
          "title": "Merge Sort",
        },
      ],
      "id": "5ecbf68781de4e2d392e22c3",
      "name": "Sort Algorithm",
    },
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`Queries User should return all users 1`] = `
Object {
  "data": Object {
    "getUsers": Array [
      Object {
        "firstname": "nguyen",
        "id": "5ecbf55607088b2b3f573459",
        "lastname": "kenny",
        "likedChallenges": Array [],
        "solvedChallenges": Array [],
        "totalPoints": 0,
        "username": "kenny",
      },
      Object {
        "firstname": "khang",
        "id": "5ecbf56f07088b2b3f57345a",
        "lastname": "nguyen",
        "likedChallenges": Array [],
        "solvedChallenges": Array [],
        "totalPoints": 0,
        "username": "lords",
      },
    ],
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`Queries User should return single user with provided ID 1`] = `
Object {
  "data": Object {
    "getUser": Object {
      "firstname": "nguyen",
      "id": "5ecbf55607088b2b3f573459",
      "lastname": "kenny",
      "likedChallenges": Array [],
      "solvedChallenges": Array [],
      "totalPoints": 0,
      "username": "kenny",
    },
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;
